// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: helloMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketCmd {

  /// <summary>Holder for reflection information generated from helloMessage.proto</summary>
  public static partial class HelloMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for helloMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HelloMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJoZWxsb01lc3NhZ2UucHJvdG8SCVNvY2tldENtZCKLAQoMSGVsbG9tZXNz",
            "YWdlEg8KB2NtZGNvZGUYASABKAkSEAoIaWRlbnRpdHkYAiABKAkSEgoKb3Bw",
            "b3NpdGVpZBgDIAEoCRIRCgl0aW1ldG9rZW4YBCABKAkSEgoKcmVzdWx0Y29k",
            "ZRgFIAEoBRIQCghzZXJ2ZXJpZBgGIAEoBRILCgNtc2cYByABKAliBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketCmd.Hellomessage), global::SocketCmd.Hellomessage.Parser, new[]{ "Cmdcode", "Identity", "Oppositeid", "Timetoken", "Resultcode", "Serverid", "Msg" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Hellomessage : pb::IMessage<Hellomessage> {
    private static readonly pb::MessageParser<Hellomessage> _parser = new pb::MessageParser<Hellomessage>(() => new Hellomessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hellomessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketCmd.HelloMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hellomessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hellomessage(Hellomessage other) : this() {
      cmdcode_ = other.cmdcode_;
      identity_ = other.identity_;
      oppositeid_ = other.oppositeid_;
      timetoken_ = other.timetoken_;
      resultcode_ = other.resultcode_;
      serverid_ = other.serverid_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hellomessage Clone() {
      return new Hellomessage(this);
    }

    /// <summary>Field number for the "cmdcode" field.</summary>
    public const int CmdcodeFieldNumber = 1;
    private string cmdcode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cmdcode {
      get { return cmdcode_; }
      set {
        cmdcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oppositeid" field.</summary>
    public const int OppositeidFieldNumber = 3;
    private string oppositeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Oppositeid {
      get { return oppositeid_; }
      set {
        oppositeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timetoken" field.</summary>
    public const int TimetokenFieldNumber = 4;
    private string timetoken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timetoken {
      get { return timetoken_; }
      set {
        timetoken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resultcode" field.</summary>
    public const int ResultcodeFieldNumber = 5;
    private int resultcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Resultcode {
      get { return resultcode_; }
      set {
        resultcode_ = value;
      }
    }

    /// <summary>Field number for the "serverid" field.</summary>
    public const int ServeridFieldNumber = 6;
    private int serverid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Serverid {
      get { return serverid_; }
      set {
        serverid_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 7;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hellomessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hellomessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cmdcode != other.Cmdcode) return false;
      if (Identity != other.Identity) return false;
      if (Oppositeid != other.Oppositeid) return false;
      if (Timetoken != other.Timetoken) return false;
      if (Resultcode != other.Resultcode) return false;
      if (Serverid != other.Serverid) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cmdcode.Length != 0) hash ^= Cmdcode.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (Oppositeid.Length != 0) hash ^= Oppositeid.GetHashCode();
      if (Timetoken.Length != 0) hash ^= Timetoken.GetHashCode();
      if (Resultcode != 0) hash ^= Resultcode.GetHashCode();
      if (Serverid != 0) hash ^= Serverid.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cmdcode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cmdcode);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (Oppositeid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Oppositeid);
      }
      if (Timetoken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Timetoken);
      }
      if (Resultcode != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Resultcode);
      }
      if (Serverid != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Serverid);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cmdcode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmdcode);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (Oppositeid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Oppositeid);
      }
      if (Timetoken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timetoken);
      }
      if (Resultcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Resultcode);
      }
      if (Serverid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Serverid);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hellomessage other) {
      if (other == null) {
        return;
      }
      if (other.Cmdcode.Length != 0) {
        Cmdcode = other.Cmdcode;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.Oppositeid.Length != 0) {
        Oppositeid = other.Oppositeid;
      }
      if (other.Timetoken.Length != 0) {
        Timetoken = other.Timetoken;
      }
      if (other.Resultcode != 0) {
        Resultcode = other.Resultcode;
      }
      if (other.Serverid != 0) {
        Serverid = other.Serverid;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cmdcode = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            Oppositeid = input.ReadString();
            break;
          }
          case 34: {
            Timetoken = input.ReadString();
            break;
          }
          case 40: {
            Resultcode = input.ReadInt32();
            break;
          }
          case 48: {
            Serverid = input.ReadInt32();
            break;
          }
          case 58: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
